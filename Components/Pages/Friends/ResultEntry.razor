@using RunTracker.Models
@using RunTracker.Components

@code {
    [Parameter]
    public required UserAccount User { get; set; }
    [Parameter]
    public required int UserId { get; set; }

    [Inject]
    public required IHttpClientFactory HttpClientFactory { get; set; }
    [Inject]
    public required NavigationManager NavigationManager { get; set; }

    private async Task AddFriend() {
        FriendInvite newInvite = new() { SenderId = UserId, ReceiverId = User.Id, Status = FriendInviteStatus.Pending, CreatedAt = DateTime.UtcNow };
        
        var httpClient = HttpClientFactory.CreateClient("RunTracker");
        var response = await httpClient.PostAsJsonAsync("/invite", newInvite);
        if (response.IsSuccessStatusCode) {
            Console.WriteLine("Friend invite sent");
            NavigationManager.NavigateTo("/friends");
        } else {
            Console.WriteLine("Failed to send friend invite");
            Console.WriteLine(response.StatusCode);
        }
    }
}

<div class="search-result">
    <Icon Name="IconName.PersonCircle"/>
    <p>@User.Username</p>
    <button class="send-invite-button" @onclick="AddFriend"><Icon Name="IconName.ArrowRight"/></button>
</div>