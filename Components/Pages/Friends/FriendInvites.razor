@page "/friends/invites"
@using System.Security.Claims

@code {
    [Inject]
    public required IHttpClientFactory HttpClientFactory { get; set; }
    [Inject]
    public required ProtectedSessionStorage ProtectedSessionStorage { get; set; }

    private List<FriendInvite> _friendInvites = new List<FriendInvite>();
    private int _userId = 0;

    protected override async Task OnInitializedAsync() {
        var authToken = await ProtectedSessionStorage.GetAsync<string>("authToken");
        if (authToken.Value is not null) {
            _userId = int.Parse(authToken.Value);
        }
        var httpClient = HttpClientFactory.CreateClient("RunTracker");
        var response = await httpClient.GetAsync($"/invites/user/{_userId}");
        if (response.IsSuccessStatusCode) {
            _friendInvites = await response.Content.ReadFromJsonAsync<List<FriendInvite>>() ?? [];
            StateHasChanged();
        }
    }
}

<div class="page-content">
    <div class="content-card">
        <h1 class="content-card-title">Friend Invites <Icon Name="IconName.Hourglass" /></h1>
        <div class="friend-invites">
            @foreach (var invite in _friendInvites) {
                <InviteEntry Invite="@invite" />
            }
        </div>
    </div>
</div>