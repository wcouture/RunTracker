@page "/register"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavManager

<div class="page-content">
    <div class="content-card">
        <h1 class="content-card-title">
            Register
        </h1>
        <EditForm class="account-form" FormName="RegisterForm" OnSubmit="HandleRegister" Model="@UserAccount">
            <div class="account-form-group">
                <label for="username">Username</label>
                <InputText class="custom-input" required @bind-Value="UserAccount.Username" placeholder="username"/>
            </div>
            <div class="account-form-group">
                <label for="password">Password</label>
                <InputText class="custom-input" type="password" required @bind-Value="UserAccount.Password" placeholder="password"/>
            </div>
            <button type="submit" class="form-button">Register</button>
        </EditForm>
        <p class="account-form-text">Already have an account? <a class="form-link"href="/login">Login</a></p>
    </div>
</div>


@code {

    [Inject]
    public required IHttpClientFactory HttpClientFactory { get; set; }
    [Inject]
    public required IPasswordHasher PasswordHasher { get; set; }

    [SupplyParameterFromForm]
    public UserAccount UserAccount { get; set; } = new UserAccount();

    public async Task HandleRegister() {
        UserAccount.Password = PasswordHasher.HashPassword(UserAccount.Password);
        
        var httpClient = HttpClientFactory.CreateClient("RunTracker");
        var response = await httpClient.PostAsJsonAsync("/register", UserAccount);
        if (response.IsSuccessStatusCode) {
            NavManager.NavigateTo("/login");
        }
        else {

            Console.WriteLine(response.StatusCode);
        }
    }
}