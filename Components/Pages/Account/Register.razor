@page "/register"
@using RunTracker.Services
@inject NavigationManager NavManager

<div class="page-content">
    <div class="content-card">
        <h1 class="content-card-title">
            Register
        </h1>
        <EditForm class="account-form" FormName="RegisterForm" OnSubmit="HandleRegister" Model="@UserAccount">
            <div class="account-form-group">
                <label for="username">Username</label>
                <InputText class="custom-input account" required @bind-Value="UserAccount.Username" placeholder="username"/>
            </div>
            <div class="account-form-group">
                <label for="email">Email</label>
                <InputText class="custom-input account" required @bind-Value="UserAccount.Email" placeholder="email"/>
            </div>
            <div class="account-form-group">
                <label for="password">Password</label>
                <InputText class="custom-input account" type="password" required @bind-Value="UserAccount.Password" placeholder="password"/>
            </div>
            <button type="submit" class="form-button">Register</button>
        </EditForm>
        <p class="account-form-text">Already have an account? <a class="form-link"href="/login">Login</a></p>
    </div>
</div>


@code {

    [Inject]
    public required IAuthenticationService AuthenticationService { get; set; }

    [SupplyParameterFromForm]
    public UserAccount UserAccount { get; set; } = new UserAccount();

    public async Task HandleRegister() {
        var result = await AuthenticationService.Register(UserAccount.Username ?? "", UserAccount.Email ?? "", UserAccount.Password ?? "");
        if (result.Success) {
            NavManager.NavigateTo("/login");
        }
        else {
            Console.WriteLine(result.ErrorMessage);
        }
    }
}